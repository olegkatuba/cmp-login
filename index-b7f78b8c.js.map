{"version":3,"file":"index-b7f78b8c.js","sources":["../src/components/Toggles/CategoryToggle/CategoryToggle.styles.tsx","../src/components/Toggles/CategoryToggle/CategoryToggle.tsx","../src/views/Buttons/MoreButton.tsx","../src/helpers/capitalize.ts","../src/views/Default/Default.tsx"],"sourcesContent":["import { CSS_PROPERTY, getCssBasedOnRtl } from '../../../styles';\n\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  align-items: center;\n  display: inline-flex;\n  margin-top: ${({ theme }) => theme.spacing.base.xxs};\n  margin-bottom: ${({ theme }) => theme.spacing.base.md};\n  ${({ theme }) => getCssBasedOnRtl(theme, CSS_PROPERTY.MARGIN_RIGHT, theme.spacing.base.md)};\n`;\n\nexport const Label = styled.div`\n  color: ${({ theme }) => theme.typography.color.primary};\n  font-size: ${({ theme }) => theme.typography.size.medium};\n  font-weight: ${({ theme }) => theme.typography.weight.bold};\n  margin-left: ${({ theme }) => theme.spacing.base.xxs};\n`;\n\nexport const ToggleContainer = styled.div`\n  color: ${({ theme }) => theme.ui.text.color};\n  display: flex;\n  flex: 1 0 auto;\n`;\n","import { Container, ToggleContainer } from './CategoryToggle.styles';\nimport { FunctionalComponent, h } from 'preact';\nimport { CategoryProps } from '../../CategoryHandler/MapCategories';\nimport Toggle from '../Toggle/Toggle';\n\nconst CategoryToggle: FunctionalComponent<CategoryProps> = ({ category, checked, onCategoryToggle }) => {\n  return (\n    <Container data-testid=\"uc-category-toggle\">\n      <ToggleContainer>\n        <Toggle\n          checked={checked}\n          id={category.slug}\n          isDisabled={category.isEssential}\n          label={category.label}\n          onToggle={onCategoryToggle}\n        />\n      </ToggleContainer>\n    </Container>\n  );\n};\n\nexport default CategoryToggle;\n","import { FunctionalComponent, h } from 'preact';\nimport Button from '../../components/Button';\nimport { DefaultUISettings } from '@usercentrics/cmp-browser-sdk';\nimport { ViewButtonProps } from './interface';\nimport capitalize from '../../helpers/capitalize';\nimport { useSettingsContext } from '../../contexts/SettingsContext';\nimport { useTheme } from 'styled-components';\n\nconst MoreButton: FunctionalComponent<ViewButtonProps> = ({ disabled, onClick }) => {\n  const { settings } = useSettingsContext();\n  const ui = settings.ui as DefaultUISettings;\n  const theme = useTheme();\n\n  return (\n    <Button\n      ariaLabel={ui.ariaLabels.ccpaMoreInformation}\n      backgroundColor={theme.ui.buttons.more.bg}\n      disabled={disabled}\n      label={capitalize(ui.buttons.showSecondLayer.label)}\n      onClick={onClick}\n      testid=\"uc-more-button\"\n      textColor={theme.ui.buttons.more.text}\n    />\n  );\n};\n\nexport default MoreButton;\n","const capitalize = (s: string): string => {\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport default capitalize;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport { ANALYTICS_TYPE, LAYER_PLACEMENT, VIEW } from '../../enums';\nimport { AcceptAllButton, DenyAllButton, MoreButton, SaveButton } from '../Buttons';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { HorizontalContainer, VerticalContainer } from '../../components/MainLayout/MainLayout.styles';\nimport Usercentrics, {\n  DefaultUISettings,\n  SECOND_LAYER_TRIGGER,\n  TRACKING_EVENT_TYPE,\n} from '@usercentrics/cmp-browser-sdk';\nimport { dispatchAnalyticsEvent, mapUIVariantToLayer, setTrackingPixel } from '../../modules/helpers';\nimport { useDeviceState, useMutation } from '../../hooks';\nimport CategoryToggle from '../../components/Toggles/CategoryToggle/CategoryToggle';\nimport { DefaultButtons } from '../../components/ButtonsContainer/interface';\nimport DefaultTabs from './DefaultTabs';\nimport MainLayout from '../../components/MainLayout/MainLayout';\nimport MapCategories from '../../components/CategoryHandler/MapCategories';\nimport { Tabs } from '../../components/Tabs';\nimport { getUserDecision } from '../../App.helpers';\nimport { memo } from 'preact/compat';\nimport { useCategoryContext } from '../../contexts/CategoryContext';\nimport { useEffect } from 'preact/hooks';\nimport { useSettingsContext } from '../../contexts/SettingsContext';\nimport { useTheme } from 'styled-components';\nimport { useUiContext } from '../../contexts/UiContext';\n\nconst testIds = {\n  firstLayerBanner: 'uc-default-banner',\n  firstLayerWall: 'uc-default-wall',\n  secondLayer: 'uc-default-settings',\n};\n\ninterface Props {\n  onClose: () => void;\n  onCustomize: () => Promise<void>;\n  onFullScreenAmp: () => void;\n  onLanguageChange: (selectedLanguage: string) => void;\n  onAcceptAll: () => Promise<void>;\n  onDenyAll: () => Promise<void>;\n  isAcceptDenyAllLoading: boolean;\n  UC: Usercentrics;\n}\n\nconst Default: FunctionalComponent<Props> = ({\n  onClose,\n  onCustomize,\n  onFullScreenAmp,\n  onLanguageChange,\n  onAcceptAll,\n  onDenyAll,\n  isAcceptDenyAllLoading,\n  UC,\n}) => {\n  const { settings } = useSettingsContext();\n  const { isIE, isMobile } = useDeviceState();\n  const { categories, getUpdatedCategories, setCategories } = useCategoryContext();\n  const {\n    closeView,\n    firstLayerVariant,\n    isAmpEnabled,\n    isInFullScreen,\n    secondLayerVariant,\n    view,\n    setFirstLayerVariant,\n    setSecondLayerVariant,\n  } = useUiContext();\n  const layerConfig = mapUIVariantToLayer(view === VIEW.FIRST_LAYER ? firstLayerVariant : secondLayerVariant, testIds);\n\n  const theme = useTheme();\n  const ui = settings.ui as DefaultUISettings;\n  const [dismissAmp, { loading: dismissAmpLoading }] = useMutation(UC.dismissAmp, UC);\n  const [updateServices, { loading: updateServicesLoading }] = useMutation(UC.updateServices, UC);\n\n  useEffect(() => {\n    const defaultSettings = settings.ui as DefaultUISettings;\n    // We only have these UI variations when TCF is disabled. For TCF we only have a single variant for each layer.\n    setFirstLayerVariant(defaultSettings.firstLayer.variant);\n    setSecondLayerVariant(defaultSettings.secondLayer.variant);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  /**\n   * This method should always be triggered when clicking on the AcceptAll button of Default UI.\n   */\n  const onAcceptAllHandler = (): void => {\n    onAcceptAll().then(() => {\n      closeView();\n    });\n  };\n\n  /**\n   * This method should always be triggered when clicking on the DenyAll button of Default UI.\n   */\n\n  const onDenyAllHandler = (): void => {\n    onDenyAll().then(() => {\n      closeView();\n    });\n  };\n\n  /**\n   * This method should always be triggered when clicking on the Save button of Default UI.\n   */\n  const onSaveHandler = (): void => {\n    if (updateServicesLoading || dismissAmpLoading) {\n      return;\n    }\n\n    updateServices(getUserDecision(categories)).then(async () => {\n      if (isAmpEnabled) {\n        await dismissAmp();\n      }\n      dispatchAnalyticsEvent(view, ANALYTICS_TYPE.SAVE);\n      setTrackingPixel(TRACKING_EVENT_TYPE.CUSTOM_CHOICE, UC.setTrackingPixel, settings.interactionAnalyticsEnabled);\n      setCategories(await getUpdatedCategories(view));\n      closeView();\n    });\n  };\n\n  const loadingMutation = updateServicesLoading || dismissAmpLoading || isAcceptDenyAllLoading;\n\n  const acceptAll = <AcceptAllButton disabled={loadingMutation} onClick={onAcceptAllHandler} />;\n  const denyAll = <DenyAllButton disabled={loadingMutation} onClick={onDenyAllHandler} />;\n  const save = <SaveButton disabled={loadingMutation} onClick={onSaveHandler} />;\n  const more = <MoreButton disabled={loadingMutation} onClick={onCustomize} />;\n\n  const buttonsToShowInFirstLayer: DefaultButtons = {\n    AcceptAllButton: acceptAll,\n    ...(!ui.firstLayer.hideButtonDeny && { DenyAllButton: denyAll }),\n    ...(ui.firstLayer.isCategoryTogglesEnabled && { SaveButton: save }),\n    ...(theme.ui.firstLayer.secondLayerTrigger === SECOND_LAYER_TRIGGER.BUTTON && { MoreButton: more }),\n  };\n\n  let buttonsToShowInSecondLayer: DefaultButtons = { AcceptAllButton: acceptAll };\n\n  if (isAmpEnabled) {\n    buttonsToShowInSecondLayer = { ...buttonsToShowInSecondLayer, DenyAllButton: denyAll };\n  } else if (ui.secondLayer.hideButtonDeny) {\n    buttonsToShowInSecondLayer = { ...buttonsToShowInSecondLayer, SaveButton: save };\n  } else {\n    buttonsToShowInSecondLayer = { ...buttonsToShowInSecondLayer, DenyAllButton: denyAll, SaveButton: save };\n  }\n\n  const headerFunctions = {\n    onClose,\n    onFullScreenAmp,\n    onLanguageChange,\n  };\n\n  const isBanner =\n    layerConfig.layerPlacement === LAYER_PLACEMENT.BOTTOM || layerConfig.layerPlacement === LAYER_PLACEMENT.TOP;\n\n  const firstLayerCustomActions =\n    theme.ui.firstLayer.secondLayerTrigger === SECOND_LAYER_TRIGGER.LINK\n      ? [{ ariaLabel: ui.buttons.showSecondLayer.label, label: ui.buttons.showSecondLayer.label, onClick: onCustomize }]\n      : [];\n  /**\n   * SWITCH VIEW - Decision logic for showing the correct view and variant.\n   */\n  switch (view) {\n    case VIEW.FIRST_LAYER:\n      return (\n        <MainLayout\n          customActions={firstLayerCustomActions}\n          footer={{\n            buttons: buttonsToShowInFirstLayer,\n          }}\n          header={{\n            description: ui.firstLayer.description.default,\n            enableHTMLTextFormatting: true,\n            functions: headerFunctions,\n            labelShowMore: ui.labels.general.showMore,\n            shortDescription: ui.firstLayer.description.short,\n            showFullScreenButton: isAmpEnabled && !isInFullScreen,\n            showLanguageSelector: ui.firstLayer.isLanguageSelectorEnabled,\n            showMoreEnabled: ui.firstLayer.description.showShortDescriptionOnMobile,\n            title: ui.firstLayer.title,\n          }}\n          layerSettings={{\n            isOverlayEnabled: ui.firstLayer.isOverlayEnabled,\n            ...((isIE || isMobile) && { minVerticalScrollerHeight: 100 }),\n            ...layerConfig,\n            placeLinksInFooter: isBanner,\n            showBorderBottom: false,\n            withFadingBottom: false,\n            withInitialHeight: true,\n          }}\n          useBackgroundColor\n        >\n          {ui.firstLayer.isCategoryTogglesEnabled && (\n            <VerticalContainer>\n              <HorizontalContainer>\n                {MapCategories({ categories, setCategories }).map((categoryProps) => (\n                  <CategoryToggle {...categoryProps} />\n                ))}\n              </HorizontalContainer>\n            </VerticalContainer>\n          )}\n        </MainLayout>\n      );\n\n    case VIEW.SECOND_LAYER:\n      return (\n        <MainLayout\n          footer={{\n            buttons: buttonsToShowInSecondLayer,\n            showBorderBeforeFooter: true,\n          }}\n          header={{\n            description: ui.secondLayer.description,\n            enableHTMLTextFormatting: true,\n            functions: headerFunctions,\n            showCloseButton: (isAmpEnabled && isInFullScreen) || !isAmpEnabled,\n            showFullScreenButton: isAmpEnabled && !isInFullScreen,\n            showLanguageSelector: ui.secondLayer.isLanguageSelectorEnabled,\n            title: ui.secondLayer.title,\n          }}\n          layerSettings={{\n            isOverlayEnabled: ui.secondLayer.isOverlayEnabled,\n            ...(isIE && { minVerticalScrollerHeight: 350 }),\n            ...layerConfig,\n            placeLinksInFooter: isBanner,\n            showBorderBottom: false,\n            side: ui.secondLayer.side,\n            withFadingBottom: true,\n          }}\n          useBackgroundColor={false}\n        >\n          <Tabs>\n            <DefaultTabs />\n          </Tabs>\n        </MainLayout>\n      );\n    default:\n      return <Fragment />;\n  }\n};\n\nexport default memo(Default);\n"],"names":["Container","styled","div","theme","spacing","base","xxs","md","getCssBasedOnRtl","CSS_PROPERTY","MARGIN_RIGHT","ToggleContainer","ui","text","color","CategoryToggle","category","checked","onCategoryToggle","h","Toggle","id","slug","isDisabled","isEssential","label","onToggle","MoreButton","disabled","onClick","settings","useSettingsContext","useTheme","Button","ariaLabel","ariaLabels","ccpaMoreInformation","backgroundColor","buttons","more","bg","s","showSecondLayer","charAt","toUpperCase","slice","testid","textColor","testIds","firstLayerBanner","firstLayerWall","secondLayer","memo","onClose","onCustomize","onFullScreenAmp","onLanguageChange","onAcceptAll","onDenyAll","isAcceptDenyAllLoading","UC","isIE","isMobile","useDeviceState","categories","getUpdatedCategories","setCategories","useCategoryContext","closeView","firstLayerVariant","isAmpEnabled","isInFullScreen","secondLayerVariant","view","setFirstLayerVariant","setSecondLayerVariant","useUiContext","layerConfig","mapUIVariantToLayer","VIEW","FIRST_LAYER","dismissAmp","loading","dismissAmpLoading","useMutation","updateServices","updateServicesLoading","useEffect","defaultSettings","firstLayer","variant","loadingMutation","acceptAll","AcceptAllButton","then","denyAll","DenyAllButton","save","SaveButton","getUserDecision","async","dispatchAnalyticsEvent","ANALYTICS_TYPE","SAVE","setTrackingPixel","TRACKING_EVENT_TYPE","CUSTOM_CHOICE","interactionAnalyticsEnabled","buttonsToShowInFirstLayer","hideButtonDeny","isCategoryTogglesEnabled","secondLayerTrigger","SECOND_LAYER_TRIGGER","BUTTON","buttonsToShowInSecondLayer","headerFunctions","isBanner","layerPlacement","LAYER_PLACEMENT","BOTTOM","TOP","firstLayerCustomActions","LINK","MainLayout","customActions","footer","header","description","default","enableHTMLTextFormatting","functions","labelShowMore","labels","general","showMore","shortDescription","short","showFullScreenButton","showLanguageSelector","isLanguageSelectorEnabled","showMoreEnabled","showShortDescriptionOnMobile","title","layerSettings","isOverlayEnabled","minVerticalScrollerHeight","placeLinksInFooter","showBorderBottom","withFadingBottom","withInitialHeight","useBackgroundColor","VerticalContainer","HorizontalContainer","MapCategories","map","categoryProps","SECOND_LAYER","showBorderBeforeFooter","showCloseButton","side","Tabs","DefaultTabs","Fragment"],"mappings":"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"}