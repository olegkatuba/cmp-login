{"version":3,"file":"gdpr-3e7ed6e3.js","sources":["../src/embeddings/gdpr.ts"],"sourcesContent":["import { DefaultUILabels, Service } from '@usercentrics/cmp-browser-sdk';\nimport { EmbedSettingNames, Classnames as GdprClassNames } from './gdprEssentials';\nimport { GDPREmbedOptions, GDPR_EMBEDDING_SECTIONS, GDPR_EMBEDDING_TYPE } from './interfaces';\nimport {\n  createHTMLElement,\n  embedExpandableItem,\n  embedLink,\n  embedSeries,\n  embedStorageInfoSection,\n  embedStoredInfoSection,\n  embedText,\n  extractGdprEmbedOptions,\n} from './helpers';\nimport { isMailAddress, reset } from '../modules/helpers';\nimport { Styles } from './essentials';\nimport { Classnames as TcfClassNames } from './tcfEssentials';\nimport { UC_UI_GLOBAL_NAMESPACE } from '../constants';\nimport { UICategory } from '../contexts/CategoryContext';\n\n/**\n * Embeds a Checkbox element into a given HTML container.\n * @param container An HTML Element to embed the text element into.\n * @param service The service that will toggle consent given\n */\nconst embedCheckbox = (container: Element | Node, service: Service): void => {\n  const checkbox = document.createElement('input');\n  checkbox.type = 'checkbox';\n  checkbox.id = service.name;\n  checkbox.title = service.name;\n  checkbox.checked = service.consent.status;\n  checkbox.disabled = service.isEssential;\n  checkbox.onclick = (): Promise<void> => {\n    const ucUi = window[UC_UI_GLOBAL_NAMESPACE];\n\n    if (ucUi) {\n      return service.consent.status ? ucUi.rejectService(service.id) : ucUi.acceptService(service.id);\n    }\n\n    return Promise.reject();\n  };\n\n  const label: HTMLLabelElement = createHTMLElement(\n    'label',\n    `uc uc-title ${GdprClassNames.optInCheckboxWithLabel}`,\n    [{ style: 'display: inline-block' }],\n    [],\n    true,\n  );\n  label.htmlFor = service.name;\n  label.innerHTML = `<h3>${service.name}</h3>`;\n\n  const checkLabelContainer = createHTMLElement(\n    'div',\n    `uc uc-checkbox ${GdprClassNames.optInCheckboxWithLabel}`,\n    [{ style: 'display: inline-block' }],\n    [checkbox, label],\n    true,\n  );\n\n  container.appendChild(checkLabelContainer);\n};\n\n/**\n * Embeds a single service into a given HTML container according to the provided option choices.\n * @param container An HTML Element to embed the service into.\n * @param service The data on the service that is to be embedded.\n * @param labels The labels as defined in the admin interface.\n * @param sections The choices on which data of the service is to be embedded.\n * @param useUcStyling idicates whether the predifined styling should be used\n */\nconst embedService = (\n  container: Element | Node,\n  service: Service,\n  labels: DefaultUILabels,\n  sections: GDPR_EMBEDDING_SECTIONS[],\n  useUcStyling: boolean,\n): void => {\n  if (!useUcStyling && sections.includes(GDPR_EMBEDDING_SECTIONS.OPT_IN_CHECKBOX_WITH_LABEL)) {\n    embedCheckbox(container, service);\n  }\n\n  if (sections.includes(GDPR_EMBEDDING_SECTIONS.DESCRIPTION) && service.description && service.description !== '') {\n    embedText(\n      container,\n      false,\n      useUcStyling,\n      [service.description],\n      labels.service.descriptionTitle,\n      GdprClassNames.description,\n    );\n  }\n\n  if (sections.includes(GDPR_EMBEDDING_SECTIONS.PROCESSOR_NAMES) && service.processingCompany) {\n    const { name, address } = service.processingCompany;\n    const data = [name, address].filter((item: string) => item !== '');\n\n    if (data.length > 0) {\n      embedText(\n        container,\n        false,\n        useUcStyling,\n        data,\n        labels.service.processingCompanyTitle,\n        GdprClassNames.processorNames,\n      );\n    }\n  }\n\n  if (\n    sections.includes(GDPR_EMBEDDING_SECTIONS.DATA_PROTECTION_OFFICER) &&\n    service.dataProtectionOfficer &&\n    service.dataProtectionOfficer !== ''\n  ) {\n    embedLink(\n      container,\n      false,\n      useUcStyling,\n      isMailAddress(service.dataProtectionOfficer)\n        ? `mailto:${service.dataProtectionOfficer}`\n        : service.dataProtectionOfficer,\n      service.dataProtectionOfficer,\n      labels.service.dataProtectionOfficer.title,\n      labels.service.dataProtectionOfficer.description,\n      GdprClassNames.dataProtectionOfficer,\n    );\n  }\n\n  if (\n    sections.includes(GDPR_EMBEDDING_SECTIONS.DATA_PURPOSES) &&\n    service.dataPurposes &&\n    service.dataPurposes.length > 0\n  ) {\n    embedSeries(\n      container,\n      false,\n      useUcStyling,\n      service.dataPurposes,\n      labels.service.dataPurposes.title,\n      labels.service.dataPurposes.description,\n      GdprClassNames.dataPurposes,\n    );\n  }\n\n  if (\n    sections.includes(GDPR_EMBEDDING_SECTIONS.TECHNOLOGIES_USED) &&\n    service.technologiesUsed &&\n    service.technologiesUsed.length > 0\n  ) {\n    embedSeries(\n      container,\n      false,\n      useUcStyling,\n      service.technologiesUsed,\n      labels.service.technologiesUsed.title,\n      labels.service.technologiesUsed.description,\n      GdprClassNames.technologiesUsed,\n    );\n  }\n\n  if (\n    sections.includes(GDPR_EMBEDDING_SECTIONS.DATA_COLLECTED) &&\n    service.dataCollected &&\n    service.dataCollected.length > 0\n  ) {\n    embedSeries(\n      container,\n      false,\n      useUcStyling,\n      service.dataCollected,\n      labels.service.dataCollected.title,\n      labels.service.dataCollected.description,\n      GdprClassNames.dataCollected,\n    );\n  }\n\n  if (sections.includes(GDPR_EMBEDDING_SECTIONS.LEGAL_BASIS) && service.legalBasis && service.legalBasis.length > 0) {\n    const data = service.legalBasis.filter((item: string) => item !== '');\n\n    if (data.length > 0) {\n      embedSeries(\n        container,\n        false,\n        useUcStyling,\n        data,\n        labels.service.legalBasis.title,\n        labels.service.legalBasis.description,\n        GdprClassNames.legalBasis,\n      );\n    }\n  }\n\n  if (\n    sections.includes(GDPR_EMBEDDING_SECTIONS.PROCESSING_LOCATION) &&\n    service.dataDistribution?.processingLocation &&\n    service.dataDistribution.processingLocation !== ''\n  ) {\n    const { processingLocationTitle, processingLocationDescription } = labels.service.dataDistribution;\n    const { processingLocation } = service.dataDistribution;\n\n    embedText(\n      container,\n      false,\n      useUcStyling,\n      [processingLocationDescription, processingLocation],\n      processingLocationTitle,\n      GdprClassNames.processingLocation,\n    );\n  }\n\n  if (\n    sections.includes(GDPR_EMBEDDING_SECTIONS.RETENTION_PERIOD) &&\n    service.retentionPeriodDescription &&\n    service.retentionPeriodDescription !== ''\n  ) {\n    embedText(\n      container,\n      false,\n      useUcStyling,\n      [labels.service.retentionPeriod.description, service.retentionPeriodDescription],\n      labels.service.retentionPeriod.title,\n      GdprClassNames.retentionPeriod,\n    );\n  }\n\n  if (\n    sections.includes(GDPR_EMBEDDING_SECTIONS.THIRD_COUNTRY_TRANSFER) &&\n    service.dataDistribution?.thirdPartyCountries &&\n    service.dataDistribution.thirdPartyCountries !== ''\n  ) {\n    const { thirdPartyCountriesDescription, thirdPartyCountriesTitle } = labels.service.dataDistribution;\n    const { thirdPartyCountries } = service.dataDistribution;\n\n    embedSeries(\n      container,\n      false,\n      useUcStyling,\n      [thirdPartyCountries],\n      thirdPartyCountriesTitle,\n      thirdPartyCountriesDescription,\n      GdprClassNames.thirdCountryTransfer,\n    );\n  }\n\n  if (\n    sections.includes(GDPR_EMBEDDING_SECTIONS.DATA_RECIPIENTS) &&\n    service.dataRecipients &&\n    service.dataRecipients.length > 0\n  ) {\n    const data = service.dataRecipients.filter((item: string) => item !== '');\n\n    if (data.length > 0) {\n      embedSeries(\n        container,\n        false,\n        useUcStyling,\n        data,\n        labels.service.dataRecipients.title,\n        labels.service.dataRecipients.description,\n        GdprClassNames.dataRecipients,\n      );\n    }\n  }\n\n  if (service.urls && sections.includes(GDPR_EMBEDDING_SECTIONS.FURTHER_INFORMATION)) {\n    const { cookiePolicyTitle, optOutTitle, privacyPolicyTitle } = labels.service.urls;\n    const { cookiePolicy, optOut, privacyPolicy } = service.urls;\n\n    if (privacyPolicy) {\n      embedLink(\n        container,\n        false,\n        useUcStyling,\n        privacyPolicy,\n        privacyPolicy,\n        privacyPolicyTitle,\n        null,\n        `${GdprClassNames.furtherInformation} uc-privacyPolicy`,\n      );\n    }\n\n    if (cookiePolicy) {\n      embedLink(\n        container,\n        false,\n        useUcStyling,\n        cookiePolicy,\n        cookiePolicy,\n        cookiePolicyTitle,\n        null,\n        `${GdprClassNames.furtherInformation} uc-cookiePolicy`,\n      );\n    }\n\n    if (optOut) {\n      embedLink(\n        container,\n        false,\n        useUcStyling,\n        optOut,\n        optOut,\n        optOutTitle,\n        null,\n        `${GdprClassNames.furtherInformation} uc-optOut`,\n      );\n    }\n\n    embedStorageInfoSection(\n      container,\n      service,\n      labels.cookieInformation,\n      false,\n      useUcStyling,\n      `${GdprClassNames.furtherInformation} uc-storageInfo`,\n    );\n\n    embedStoredInfoSection(\n      container,\n      service,\n      labels.cookieInformation,\n      false,\n      useUcStyling,\n      `${GdprClassNames.furtherInformation} uc-storedInfo`,\n    );\n  }\n};\n\n/**\n * Embeds the list of services whithout seccions.\n * @param container An HTML Element to embed the service into.\n * @param services The list of services to be embedded.\n * @param labels The labels as defined in the admin interface.\n * @param embedOptions The embed options set by the publisher through attributes\n */\nconst embedServices = (\n  container: Element | Node,\n  services: Service[],\n  labels: DefaultUILabels,\n  embedOptions: GDPREmbedOptions,\n): void => {\n  const { sections, showToggle, useUcStyling } = embedOptions;\n  const fragment = document.createDocumentFragment();\n\n  services.forEach((elem) => {\n    const serviceDataFragment = createHTMLElement('div');\n    serviceDataFragment.setAttribute('data-testid', 'uc-embed-service');\n    embedService(serviceDataFragment, elem, labels, sections, useUcStyling);\n\n    if (useUcStyling) {\n      embedExpandableItem(fragment, elem.name, serviceDataFragment, useUcStyling, showToggle, elem);\n    } else {\n      fragment.appendChild(serviceDataFragment);\n    }\n  });\n\n  container.appendChild(fragment);\n};\n\n/**\n * Embeds the list of services grouped by category into a given HTML container.\n * @param container An HTML Element to embed the service into.\n * @param categories The list of categories to be embedded.\n * @param labels The labels as defined in the admin interface.\n * @param embedOptions The embed options set by the publisher through attributes\n */\nconst embedCategoriesList = (\n  container: Element | Node,\n  categories: UICategory[],\n  labels: DefaultUILabels,\n  embedOptions: GDPREmbedOptions,\n): void => {\n  const { useUcStyling } = embedOptions;\n  const fragment = document.createDocumentFragment();\n\n  const sectionBoxes: HTMLElement[] = [];\n\n  categories.forEach((category) => {\n    const headlineData: HTMLElement[] = [];\n\n    const categoryHeadline = createHTMLElement(\n      'h3',\n      TcfClassNames.listHeadline,\n      [Styles.headlinesBorderBottom],\n      category.label,\n      useUcStyling,\n    );\n    headlineData.push(categoryHeadline);\n\n    if (category.description) {\n      categoryHeadline.style.removeProperty('border-bottom');\n      categoryHeadline.style.paddingBottom = '10px';\n\n      const categoryDescription = createHTMLElement(\n        'h4',\n        TcfClassNames.listHeadlineDescription,\n        [Styles.headlinesBorderBottom],\n        category.description,\n        useUcStyling,\n      );\n      categoryDescription.style.paddingTop = '0px';\n\n      if (useUcStyling) {\n        categoryDescription.style.fontSize = '0.83em';\n      } else {\n        categoryHeadline.style.marginBottom = '0px';\n        categoryDescription.style.marginTop = '0px';\n      }\n\n      headlineData.push(categoryDescription);\n    }\n\n    const categoryBox = createHTMLElement('div', TcfClassNames.listDiv, [Styles.list], headlineData, useUcStyling);\n    categoryBox.setAttribute('data-testid', `uc-embed-${category.slug}`);\n    embedServices(categoryBox, category.services as Service[], labels, embedOptions);\n\n    sectionBoxes.push(categoryBox);\n  });\n\n  sectionBoxes.forEach((box) => fragment.appendChild(box));\n\n  container.appendChild(fragment);\n};\n\n/**\n * Embeds the list of services into a given HTML container.\n * @param container An HTML Element to embed the service into.\n * @param services The list of services to be embedded.\n * @param labels The labels as defined in the admin interface.\n * @param embedOptions The embed options set by the publisher through attributes\n */\nconst embedServiceList = (\n  container: Element | Node,\n  services: Service[],\n  labels: DefaultUILabels,\n  embedOptions: GDPREmbedOptions,\n): void => {\n  const { useUcStyling } = embedOptions;\n  const fragment = document.createDocumentFragment();\n\n  if (useUcStyling) {\n    const servicesBoxHeadline = createHTMLElement(\n      'h3',\n      TcfClassNames.listHeadline,\n      [Styles.headlinesBorderBottom],\n      ' ',\n      useUcStyling,\n    );\n    const servicesBox = createHTMLElement(\n      'div',\n      TcfClassNames.listDiv,\n      [Styles.list],\n      servicesBoxHeadline,\n      useUcStyling,\n    );\n    servicesBox.setAttribute('data-testid', 'uc-embed-services-list');\n\n    embedServices(servicesBox, services, labels, embedOptions);\n\n    fragment.appendChild(servicesBox);\n  } else {\n    embedServices(fragment, services, labels, embedOptions);\n  }\n\n  container.appendChild(fragment);\n};\n\n/**\n * Embeds the List of services according to the specified options.\n * @param container An HTML Element to embed the service into.\n * @param categories The list of categories to be embedded.\n * @param services The list of services to be embedded.\n * @param labels The labels as defined in the admin interface.\n * @param embedOptions The embed options set by the publisher through attributes or the default fallback embed options.\n */\nconst embedListView = (\n  container: Element | Node,\n  categories: UICategory[],\n  services: Service[],\n  labels: DefaultUILabels,\n  embedOptions: GDPREmbedOptions,\n): void => {\n  let listContainer: HTMLElement | DocumentFragment;\n\n  if (embedOptions.useUcStyling) {\n    const boxHeadline = createHTMLElement(\n      'h2',\n      TcfClassNames.headline,\n      [Styles.headlines],\n      embedOptions.embedTitle,\n      embedOptions.useUcStyling,\n    );\n    listContainer = createHTMLElement(\n      'div',\n      TcfClassNames.outerDiv,\n      [Styles.outerBox],\n      boxHeadline,\n      embedOptions.useUcStyling,\n    );\n    listContainer.setAttribute('data-testid', 'uc-embed-services');\n  } else {\n    listContainer = document.createDocumentFragment();\n  }\n\n  switch (embedOptions.embedType) {\n    case GDPR_EMBEDDING_TYPE.CATEGORY:\n      embedCategoriesList(listContainer, categories, labels, embedOptions);\n      break;\n    case GDPR_EMBEDDING_TYPE.ALL:\n    default:\n      embedServiceList(listContainer, services, labels, embedOptions);\n      break;\n  }\n\n  container.appendChild(listContainer);\n};\n\n/**\n * Searches the current DOM for elements with the 'uc-embed' class and embeds the specified data inside these containers.\n * @param categories The data source for all the categories that may be embedded.\n * @param services The data source for all the services that may be embedded.\n * @param labels The labels associated with the embeddings.\n * @param servicesLabel Label for styled services header.\n * @param containers DOM elements with the 'uc-embed' class\n */\nexport const embedGDPR = (\n  categories: UICategory[],\n  services: Service[],\n  labels: DefaultUILabels,\n  servicesLabel: string,\n  containers: Element[],\n): void => {\n  containers.forEach((container) => {\n    reset(container);\n    const embedOptions = extractGdprEmbedOptions(container, servicesLabel);\n\n    if (embedOptions.useUcStyling) {\n      container.classList.add('uc-embed-styled');\n    }\n\n    // If no serviceName is specified we embed ALL services\n    if (embedOptions.embedService === EmbedSettingNames.embeddingShowAllServices) {\n      embedListView(container, categories, services, labels, embedOptions);\n    }\n    // If a serviceName IS specified, then we only embed this single service in the given container\n    else {\n      const service = services.find((elem) => elem.name === embedOptions.embedService);\n\n      if (service) {\n        embedService(container, service, labels, embedOptions.sections, embedOptions.useUcStyling);\n      }\n    }\n  });\n};\n"],"names":["embedService","container","service","labels","sections","useUcStyling","includes","GDPR_EMBEDDING_SECTIONS","OPT_IN_CHECKBOX_WITH_LABEL","checkbox","document","createElement","type","id","name","title","checked","consent","status","disabled","isEssential","onclick","ucUi","window","UC_UI_GLOBAL_NAMESPACE","rejectService","acceptService","Promise","reject","label","createHTMLElement","GdprClassNames","optInCheckboxWithLabel","style","htmlFor","innerHTML","checkLabelContainer","appendChild","embedCheckbox","DESCRIPTION","description","embedText","descriptionTitle","PROCESSOR_NAMES","processingCompany","address","data","filter","item","length","processingCompanyTitle","processorNames","DATA_PROTECTION_OFFICER","dataProtectionOfficer","embedLink","isMailAddress","DATA_PURPOSES","dataPurposes","embedSeries","TECHNOLOGIES_USED","technologiesUsed","DATA_COLLECTED","dataCollected","LEGAL_BASIS","legalBasis","PROCESSING_LOCATION","dataDistribution","_service$dataDistribu","processingLocation","processingLocationTitle","processingLocationDescription","RETENTION_PERIOD","retentionPeriodDescription","retentionPeriod","THIRD_COUNTRY_TRANSFER","_service$dataDistribu2","thirdPartyCountries","thirdPartyCountriesDescription","thirdPartyCountriesTitle","thirdCountryTransfer","DATA_RECIPIENTS","dataRecipients","urls","FURTHER_INFORMATION","cookiePolicyTitle","optOutTitle","privacyPolicyTitle","cookiePolicy","optOut","privacyPolicy","furtherInformation","embedStorageInfoSection","cookieInformation","embedStoredInfoSection","embedServices","services","embedOptions","showToggle","fragment","createDocumentFragment","forEach","elem","serviceDataFragment","setAttribute","embedExpandableItem","embedListView","categories","listContainer","boxHeadline","TcfClassNames","headline","Styles","headlines","embedTitle","outerDiv","outerBox","embedType","GDPR_EMBEDDING_TYPE","CATEGORY","sectionBoxes","category","headlineData","categoryHeadline","listHeadline","headlinesBorderBottom","push","removeProperty","paddingBottom","categoryDescription","listHeadlineDescription","paddingTop","fontSize","marginBottom","marginTop","categoryBox","listDiv","list","slug","box","embedCategoriesList","ALL","servicesBoxHeadline","servicesBox","embedServiceList","embedGDPR","servicesLabel","containers","reset","extractGdprEmbedOptions","classList","add","EmbedSettingNames","embeddingShowAllServices","find"],"mappings":"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"}