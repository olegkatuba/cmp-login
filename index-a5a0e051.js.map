{"version":3,"file":"index-a5a0e051.js","sources":["../src/views/View.tsx"],"sourcesContent":["import { ANALYTICS_TYPE, VIEW } from '../enums';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { Suspense, lazy } from 'preact/compat';\nimport Usercentrics, { UI_VARIANT } from '@usercentrics/cmp-browser-sdk';\nimport { useDeviceState, useMutation } from '../hooks';\nimport { TAB_VIEW } from '../enums/Tabs';\nimport { dispatchAnalyticsEvent } from '../modules/helpers';\nimport { useSettingsContext } from '../contexts/SettingsContext';\nimport { useState } from 'preact/hooks';\nimport { useUiContext } from '../contexts/UiContext';\n\nconst TCF = lazy(() => import('./TCF'));\nconst CCPA = lazy(() => import('./Ccpa'));\nconst Default = lazy(() => import('./Default'));\nconst PrivacyButton = lazy(() => import('./Buttons/PrivacyButton'));\n\ntype Props = {\n  acceptAllDefault: () => Promise<void>;\n  acceptAllTCF: () => Promise<void>;\n  denyAllDefault: () => Promise<void>;\n  denyAllTCF: () => Promise<void>;\n  onClose: () => Promise<void>;\n  onLanguageChange: (language: string) => Promise<void>;\n  showSecondLayer: () => void;\n  UC: Usercentrics;\n};\n\nconst View: FunctionalComponent<Props> = ({\n  acceptAllDefault,\n  acceptAllTCF,\n  denyAllDefault,\n  denyAllTCF,\n  showSecondLayer,\n  onClose,\n  onLanguageChange,\n  UC,\n}) => {\n  const [toggleCcpaChecked, setToggleCcpaChecked] = useState(false);\n  const { settings } = useSettingsContext();\n  const {\n    clearCategoryPurposeScrollToId,\n    clearServiceVendorScrollToId,\n    isAmpEnabled,\n    setIsInFullScreen,\n    setTabView,\n    setView,\n    uiVariant,\n    updateView,\n    view,\n  } = useUiContext();\n  const { isDesktop } = useDeviceState();\n\n  const [enterFullscreenAmp, { loading: enterFullscreenAmpLoading }] = useMutation(UC.enterFullscreenAmp, UC);\n  const [, { loading: acceptAllServicesLoading }] = useMutation(UC.acceptAllServices, UC);\n  const [, { loading: acceptAllForTCFLoading }] = useMutation(UC.acceptAllForTCF, UC);\n  const [, { loading: acceptAllAmpLoading }] = useMutation(UC.acceptAllAmp, UC);\n  const [, { loading: denyAllServicesLoading }] = useMutation(UC.denyAllServices, UC);\n  const [, { loading: denyAllForTCFLoading }] = useMutation(UC.denyAllForTCF, UC);\n  const [, { loading: denyAllAmpLoading }] = useMutation(UC.denyAllAmp, UC);\n\n  /**\n   * AMP UI HANDLERS - methods that are called once certain actions are taken by the user when AMP is enabled\n   */\n  const onFullScreenAmp = (): void => {\n    if (enterFullscreenAmpLoading) {\n      return;\n    }\n\n    enterFullscreenAmp().then(() => {\n      updateView(VIEW.SECOND_LAYER);\n      setIsInFullScreen(true);\n    });\n  };\n\n  /**\n   * COMMON HANDLERS - These are used despite the variant\n   */\n\n  /** This method should always be triggered when clicking on the floating Privacy Button. */\n  const onPrivacyButtonClick = (): void => {\n    setTabView(TAB_VIEW.CATEGORIES_PURPOSES);\n    clearServiceVendorScrollToId();\n    clearCategoryPurposeScrollToId();\n    updateView(VIEW.SECOND_LAYER);\n  };\n\n  /** This method should always be triggered when clicking on the More button (customize) */\n  const onCustomize = async (): Promise<void> => {\n    if (enterFullscreenAmpLoading) {\n      return;\n    }\n\n    dispatchAnalyticsEvent(view, ANALYTICS_TYPE.MORE_INFORMATION_LINK);\n\n    if (isAmpEnabled) {\n      await enterFullscreenAmp();\n      setIsInFullScreen(true);\n    }\n\n    setTabView(TAB_VIEW.CATEGORIES_PURPOSES);\n\n    // TODO check if this eslint rule makes sense for us\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    showSecondLayer();\n  };\n\n  /**\n   * A method that will navigate to the secondLayer with the vendors tab selected.\n   */\n  const onShowVendorsHandler = async (): Promise<void> => {\n    if (enterFullscreenAmpLoading) {\n      return;\n    }\n\n    if (isAmpEnabled) {\n      await enterFullscreenAmp();\n      setIsInFullScreen(true);\n    }\n\n    setTabView(TAB_VIEW.SERVICES_VENDORS);\n    setView(VIEW.SECOND_LAYER);\n  };\n\n  if (view === VIEW.PRIVACY_BUTTON) {\n    return (\n      <Suspense fallback={<Fragment />}>\n        <PrivacyButton\n          iconUrl={settings.ui.privacyButton.iconUrl}\n          isEnabled={settings.ui.privacyButton.isEnabled}\n          onClick={onPrivacyButtonClick}\n          position={settings.ui.privacyButton.position}\n          isMobile={!isDesktop}\n        />\n      </Suspense>\n    );\n  }\n\n  if (view === VIEW.NONE) {\n    return null;\n  }\n\n  switch (uiVariant) {\n    case UI_VARIANT.CCPA: {\n      return (\n        <Suspense fallback={<Fragment />}>\n          <CCPA\n            onClose={onClose}\n            onCustomize={onCustomize}\n            onLanguageChange={onLanguageChange}\n            setToggleCcpaChecked={setToggleCcpaChecked}\n            toggleCcpaChecked={toggleCcpaChecked}\n            UC={UC}\n          />\n        </Suspense>\n      );\n    }\n    case UI_VARIANT.DEFAULT: {\n      return (\n        <Suspense fallback={<Fragment />}>\n          <Default\n            onClose={onClose}\n            onCustomize={onCustomize}\n            onFullScreenAmp={onFullScreenAmp}\n            onLanguageChange={onLanguageChange}\n            onAcceptAll={acceptAllDefault}\n            onDenyAll={denyAllDefault}\n            isAcceptDenyAllLoading={acceptAllServicesLoading || denyAllServicesLoading || denyAllAmpLoading}\n            UC={UC}\n          />\n        </Suspense>\n      );\n    }\n    case UI_VARIANT.TCF: {\n      return (\n        <Suspense fallback={<Fragment />}>\n          <TCF\n            onCustomize={onCustomize}\n            onFullScreenAmp={onFullScreenAmp}\n            onLanguageChange={onLanguageChange}\n            onShowVendorsHandler={onShowVendorsHandler}\n            onAcceptAll={acceptAllTCF}\n            onDenyAll={denyAllTCF}\n            isAcceptDenyAllLoading={\n              denyAllServicesLoading ||\n              denyAllForTCFLoading ||\n              acceptAllServicesLoading ||\n              acceptAllForTCFLoading ||\n              acceptAllAmpLoading\n            }\n            UC={UC}\n          />\n        </Suspense>\n      );\n    }\n    default:\n      return null;\n  }\n};\n\nexport default View;\n"],"names":["TCF","lazy","__import__","CCPA","Default","PrivacyButton","acceptAllDefault","acceptAllTCF","denyAllDefault","denyAllTCF","showSecondLayer","onClose","onLanguageChange","UC","toggleCcpaChecked","setToggleCcpaChecked","useState","settings","useSettingsContext","clearCategoryPurposeScrollToId","clearServiceVendorScrollToId","isAmpEnabled","setIsInFullScreen","setTabView","setView","uiVariant","updateView","view","useUiContext","isDesktop","useDeviceState","enterFullscreenAmp","loading","enterFullscreenAmpLoading","useMutation","acceptAllServicesLoading","acceptAllServices","acceptAllForTCFLoading","acceptAllForTCF","acceptAllAmpLoading","acceptAllAmp","denyAllServicesLoading","denyAllServices","denyAllForTCFLoading","denyAllForTCF","denyAllAmpLoading","denyAllAmp","onFullScreenAmp","then","VIEW","SECOND_LAYER","onPrivacyButtonClick","TAB_VIEW","CATEGORIES_PURPOSES","onCustomize","async","dispatchAnalyticsEvent","ANALYTICS_TYPE","MORE_INFORMATION_LINK","onShowVendorsHandler","SERVICES_VENDORS","PRIVACY_BUTTON","h","Suspense","fallback","Fragment","iconUrl","ui","privacyButton","isEnabled","onClick","position","isMobile","NONE","UI_VARIANT","DEFAULT","onAcceptAll","onDenyAll","isAcceptDenyAllLoading"],"mappings":"+IAWA,MAAMA,EAAMC,GAAK,IAAMC,WAAO,yBACxBC,EAAOF,GAAK,IAAMC,WAAO,yBACzBE,EAAUH,GAAK,IAAMC,WAAO,yBAC5BG,EAAgBJ,GAAK,IAAMC,WAAO,+CAaC,EACvCI,iBAAAA,EACAC,aAAAA,EACAC,eAAAA,EACAC,WAAAA,EACAC,gBAAAA,EACAC,QAAAA,EACAC,iBAAAA,EACAC,GAAAA,YAEOC,EAAmBC,GAAwBC,GAAS,IACrDC,SAAEA,GAAaC,KACfC,+BACJA,EADIC,6BAEJA,EAFIC,aAGJA,EAHIC,kBAIJA,EAJIC,WAKJA,EALIC,QAMJA,EANIC,UAOJA,EAPIC,WAQJA,EARIC,KASJA,GACEC,KACEC,UAAEA,GAAcC,KAEfC,GAAsBC,QAASC,IAA+BC,EAAYrB,EAAGkB,mBAAoBlB,MAC7FmB,QAASG,IAA8BD,EAAYrB,EAAGuB,kBAAmBvB,MACzEmB,QAASK,IAA4BH,EAAYrB,EAAGyB,gBAAiBzB,MACrEmB,QAASO,IAAyBL,EAAYrB,EAAG2B,aAAc3B,MAC/DmB,QAASS,IAA4BP,EAAYrB,EAAG6B,gBAAiB7B,MACrEmB,QAASW,IAA0BT,EAAYrB,EAAG+B,cAAe/B,MACjEmB,QAASa,IAAuBX,EAAYrB,EAAGiC,WAAYjC,GAKhEkC,EAAkB,KAClBd,GAIJF,IAAqBiB,MAAK,KACxBtB,EAAWuB,EAAKC,cAChB5B,GAAkB,OAShB6B,EAAuB,KAC3B5B,EAAW6B,EAASC,qBACpBjC,IACAD,IACAO,EAAWuB,EAAKC,eAIZI,EAAcC,UACdtB,IAIJuB,EAAuB7B,EAAM8B,EAAeC,uBAExCrC,UACIU,IACNT,GAAkB,IAGpBC,EAAW6B,EAASC,qBAIpB3C,MAMIiD,EAAuBJ,UACvBtB,IAIAZ,UACIU,IACNT,GAAkB,IAGpBC,EAAW6B,EAASQ,kBACpBpC,EAAQyB,EAAKC,mBAGXvB,IAASsB,EAAKY,sBAEdC,EAACC,GAASC,SAAUF,EAACG,SACnBH,EAACzD,GACC6D,QAASjD,EAASkD,GAAGC,cAAcF,QACnCG,UAAWpD,EAASkD,GAAGC,cAAcC,UACrCC,QAASnB,EACToB,SAAUtD,EAASkD,GAAGC,cAAcG,SACpCC,UAAW3C,QAMfF,IAASsB,EAAKwB,YACT,YAGDhD,QACDiD,EAAWvE,YAEZ2D,EAACC,GAASC,SAAUF,EAACG,SACnBH,EAAC3D,GACCQ,QAASA,EACT2C,YAAaA,EACb1C,iBAAkBA,EAClBG,qBAAsBA,EACtBD,kBAAmBA,EACnBD,GAAIA,UAKP6D,EAAWC,eAEZb,EAACC,GAASC,SAAUF,EAACG,SACnBH,EAAC1D,GACCO,QAASA,EACT2C,YAAaA,EACbP,gBAAiBA,EACjBnC,iBAAkBA,EAClBgE,YAAatE,EACbuE,UAAWrE,EACXsE,uBAAwB3C,GAA4BM,GAA0BI,EAC9EhC,GAAIA,UAKP6D,EAAW1E,WAEZ8D,EAACC,GAASC,SAAUF,EAACG,SACnBH,EAAC9D,GACCsD,YAAaA,EACbP,gBAAiBA,EACjBnC,iBAAkBA,EAClB+C,qBAAsBA,EACtBiB,YAAarE,EACbsE,UAAWpE,EACXqE,uBACErC,GACAE,GACAR,GACAE,GACAE,EAEF1B,GAAIA,oBAMH"}