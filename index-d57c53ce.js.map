{"version":3,"file":"index-d57c53ce.js","sources":["../src/views/Buttons/CcpaButton.tsx","../src/components/Toggles/CcpaToggle/CcpaToggle.styles.tsx","../src/components/Toggles/CcpaToggle/CcpaToggle.tsx","../src/views/Buttons/CcpaToggle.tsx","../src/views/Ccpa/Ccpa.tsx"],"sourcesContent":["import { FunctionalComponent, h } from 'preact';\nimport Button from '../../components/Button';\nimport { CcpaUISettings } from '@usercentrics/cmp-browser-sdk';\nimport { ViewButtonProps } from './interface';\nimport { useSettingsContext } from '../../contexts/SettingsContext';\nimport { useTheme } from 'styled-components';\n\nconst CcpaButton: FunctionalComponent<ViewButtonProps> = ({ disabled, onClick }) => {\n  const { settings } = useSettingsContext();\n  const ui = settings.ui as CcpaUISettings;\n  const theme = useTheme();\n\n  return (\n    <Button\n      ariaLabel={ui.ariaLabels.ccpaButton}\n      backgroundColor={theme.ui.buttons.save.bg}\n      disabled={disabled}\n      fullWidth={false}\n      label={ui.buttons.save.label}\n      onClick={onClick}\n      testid=\"uc-ccpa-button\"\n      textColor={theme.ui.buttons.save.text}\n    />\n  );\n};\n\nexport default CcpaButton;\n","import { getCssBasedOnRtl, media } from '../../../styles';\nimport { CSS_PROPERTY } from '../../../enums';\nimport styled from 'styled-components';\n\ntype ToggleButtonProps = {\n  size: string;\n};\n\ntype ToggleLabelProps = {\n  labelSize?: string;\n};\n\nexport const ToggleButton = styled.button<ToggleButtonProps>`\n  align-items: center;\n  border: none;\n  display: flex;\n  background: none;\n  justify-content: center;\n  outline: none;\n  height: ${({ size }) => (size === 'small' ? '16px' : '20px')};\n  min-height: ${({ size }) => (size === 'small' ? '16px' : '20px')};\n  min-width: ${({ size }) => (size === 'small' ? '32px' : '40px')};\n  padding: 0;\n  width: ${({ size }) => (size === 'small' ? '32px' : '40px')};\n\n  ${media.mobilePortrait} {\n    height: ${({ size }) => (size === 'small' ? '16px' : '24px')};\n    width: ${({ size }) => (size === 'small' ? '32px' : '48px')};\n  }\n\n  &:focus-visible {\n    outline-style: auto;\n    outline-width: 5px;\n  }\n`;\n\nexport const ToggleCategoriesButton = styled.button`\n  align-items: center;\n  background: none;\n  border: none;\n  display: flex;\n  height: 16px;\n  justify-content: center;\n  padding: 0;\n  width: 32px;\n`;\n\nexport const ToggleLabel = styled.label<ToggleLabelProps>`\n  cursor: pointer;\n  display: inline-flex;\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.ui.text.color};\n  font-weight: ${({ theme }) => theme.typography.weight.bold};\n  font-size: ${({ theme }) => theme.typography.size.medium};\n  ${({ theme }) => getCssBasedOnRtl(theme, CSS_PROPERTY.MARGIN_LEFT, theme.spacing.base.xs)};\n  white-space: nowrap;\n  &:not(:last-child) {\n    ${({ theme }) => getCssBasedOnRtl(theme, CSS_PROPERTY.MARGIN_RIGHT, theme.spacing.base.xs)};\n  }\n\n  ${media.mobilePortrait} {\n    align-items: center;\n    ${({ theme }) => getCssBasedOnRtl(theme, CSS_PROPERTY.MARGIN_RIGHT, theme.spacing.base.sm)};\n    + div {\n      ${({ theme }) => getCssBasedOnRtl(theme, CSS_PROPERTY.MARGIN_LEFT, theme.spacing.base.sm)};\n    }\n  }\n`;\n\nexport const ToggleContainer = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`;\n","import { FunctionalComponent, h } from 'preact';\nimport { OffIcon, OnIcon } from '../../../assets';\nimport { ToggleButton, ToggleContainer, ToggleLabel } from './CcpaToggle.styles';\nimport { useEffect, useRef } from 'preact/hooks';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport interface Props {\n  ariaLabel?: string;\n  checked?: boolean;\n  id?: string | number;\n  label?: string;\n  disabled?: boolean;\n  onToggle: (checked: boolean) => void;\n  testid: string;\n  size?: string;\n  focusOnMount: boolean;\n}\n\nconst CcpaToggle: FunctionalComponent<Props> = ({\n  ariaLabel = '',\n  checked = false,\n  disabled = false,\n  focusOnMount = false,\n  id = uuidv4(),\n  label,\n  onToggle,\n  testid,\n  size = 'regular',\n}) => {\n  const toggleRef = useRef<HTMLButtonElement>(null);\n  const onToggleHandler = (): void => {\n    onToggle(!checked);\n  };\n\n  useEffect(() => {\n    if (focusOnMount && toggleRef.current) {\n      toggleRef.current.focus({ preventScroll: true });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <ToggleContainer>\n      <ToggleButton\n        data-testid={testid}\n        disabled={disabled}\n        id={`toggle-${id}`}\n        onClick={onToggleHandler}\n        size={size}\n        role=\"switch\"\n        aria-checked={checked ? 'true' : 'false'}\n        aria-readonly={disabled ? 'true' : 'false'}\n        aria-label={ariaLabel}\n        tabIndex={0}\n        ref={toggleRef}\n      >\n        {checked ? <OnIcon /> : <OffIcon />}\n      </ToggleButton>\n      {label && (\n        <ToggleLabel key={id} htmlFor={`toggle-${id}`}>\n          {label}\n        </ToggleLabel>\n      )}\n    </ToggleContainer>\n  );\n};\n\nexport default CcpaToggle;\n","import { CcpaUISettings, FIRST_LAYER_VARIANT } from '@usercentrics/cmp-browser-sdk';\nimport { FunctionalComponent, h } from 'preact';\nimport { CcpaToggle as Toggle } from '../../components/Toggles';\nimport { VIEW } from '../../enums';\nimport { useSettingsContext } from '../../contexts/SettingsContext';\nimport { useUiContext } from '../../contexts/UiContext';\n\ninterface Props {\n  checked: boolean;\n  disabled: boolean;\n  onToggle: () => void;\n  focusOnMount: boolean;\n}\n\nconst CcpaToggle: FunctionalComponent<Props> = ({ checked, disabled, onToggle, focusOnMount }) => {\n  const { settings } = useSettingsContext();\n  const ui = settings.ui as CcpaUISettings;\n  const { firstLayerVariant, view } = useUiContext();\n\n  return (\n    <Toggle\n      ariaLabel={ui.ariaLabels.ccpaButton}\n      checked={checked}\n      disabled={disabled}\n      focusOnMount={focusOnMount}\n      id={\n        view === VIEW.FIRST_LAYER && firstLayerVariant === FIRST_LAYER_VARIANT.BANNER\n          ? 'toggle-ccpa-banner'\n          : 'toggle-ccpa-wall'\n      }\n      label={ui.buttons.optOutNotice.label}\n      onToggle={onToggle}\n      testid={\n        view === VIEW.FIRST_LAYER && firstLayerVariant === FIRST_LAYER_VARIANT.BANNER\n          ? 'uc-ccpa-toggle'\n          : 'uc-ccpa-wall-toggle'\n      }\n    />\n  );\n};\n\nexport default CcpaToggle;\n","import { CcpaButton, CcpaToggle } from '../Buttons';\nimport { Fragment, FunctionalComponent, h } from 'preact';\nimport { LAYER_PLACEMENT, VIEW } from '../../enums';\nimport { StateUpdater, useEffect, useState } from 'preact/hooks';\nimport Usercentrics, { CcpaUISettings } from '@usercentrics/cmp-browser-sdk';\nimport { useDeviceState, useMutation } from '../../hooks';\nimport { CcpaButtons } from '../../components/ButtonsContainer/interface';\nimport DefaultTabs from '../Default/DefaultTabs';\nimport MainLayout from '../../components/MainLayout/MainLayout';\nimport { Tabs } from '../../components/Tabs';\nimport { mapUIVariantToLayer } from '../../modules/helpers';\nimport { memo } from 'preact/compat';\nimport { useSettingsContext } from '../../contexts/SettingsContext';\nimport { useUiContext } from '../../contexts/UiContext';\n\nconst testIds = {\n  firstLayerBanner: 'uc-ccpa-banner',\n  firstLayerWall: 'uc-ccpa-wall',\n  secondLayer: 'uc-ccpa-settings',\n};\ninterface Props {\n  onClose: () => Promise<void>;\n  onCustomize: () => Promise<void>;\n  onLanguageChange: (selectedLanguage: string) => void;\n  setToggleCcpaChecked: StateUpdater<boolean>;\n  toggleCcpaChecked: boolean;\n  UC: Usercentrics;\n}\n\nconst Ccpa: FunctionalComponent<Props> = ({\n  onClose,\n  onCustomize,\n  onLanguageChange,\n  setToggleCcpaChecked,\n  toggleCcpaChecked,\n  UC,\n}) => {\n  const { firstLayerVariant, secondLayerVariant, view } = useUiContext();\n  const { settings } = useSettingsContext();\n  const { isIE, isMobile } = useDeviceState();\n  const [saveOptOutForCcpa, { loading: saveOptOutForCcpaLoading }] = useMutation(UC.saveOptOutForCcpa, UC);\n  const { closeView, setFirstLayerVariant, setSecondLayerVariant } = useUiContext();\n  const [focusToggleOnMount, setFocusToggleOnMount] = useState<boolean>(false);\n\n  useEffect(() => {\n    const ccpaSettings = settings.ui as CcpaUISettings;\n    setToggleCcpaChecked(UC.getCcpaOptOutStatus());\n    setFirstLayerVariant(ccpaSettings.firstLayer.variant);\n    setSecondLayerVariant(ccpaSettings.secondLayer.variant);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const ui = settings.ui as CcpaUISettings;\n\n  const layerConfig = mapUIVariantToLayer(view === VIEW.SECOND_LAYER ? secondLayerVariant : firstLayerVariant, testIds);\n  /**\n   * This method should always be triggered when clicking on CCPA button.\n   */\n  const onCcpaClickButton = (): void => {\n    closeView();\n\n    // Store user action on the SDK\n    UC.saveUserActionPerformed();\n  };\n\n  /**\n   * This method should always be triggered when clicking on CCPA toggle.\n   */\n  const onCcpaToggle = async (): Promise<void> => {\n    if (saveOptOutForCcpaLoading) {\n      return;\n    }\n    // Setting the optout status on the SDK\n    saveOptOutForCcpa(!toggleCcpaChecked);\n    // Internal state for the toggle\n    setToggleCcpaChecked(!toggleCcpaChecked);\n\n    let focusedToggle = null;\n\n    try {\n      focusedToggle = document.activeElement?.shadowRoot?.querySelector(':focus-visible');\n    } catch (error) {\n      focusedToggle = null;\n    }\n\n    if (focusedToggle !== null) {\n      setFocusToggleOnMount(true);\n    }\n  };\n\n  const loadingMutation = saveOptOutForCcpaLoading;\n\n  const SaveButton = <CcpaButton disabled={loadingMutation} onClick={onCcpaClickButton} />;\n  const CcpaToggleElement = (\n    <CcpaToggle\n      checked={toggleCcpaChecked}\n      disabled={loadingMutation}\n      onToggle={onCcpaToggle}\n      focusOnMount={focusToggleOnMount}\n    />\n  );\n  const buttons: CcpaButtons = { CcpaButton: SaveButton, CcpaToggle: CcpaToggleElement };\n  const isBanner =\n    layerConfig.layerPlacement === LAYER_PLACEMENT.BOTTOM || layerConfig.layerPlacement === LAYER_PLACEMENT.TOP;\n\n  switch (view) {\n    case VIEW.FIRST_LAYER:\n      return (\n        <MainLayout\n          customActions={[\n            {\n              ariaLabel: ui.ariaLabels.ccpaMoreInformation,\n              label: ui.buttons.showSecondLayer.label,\n              onClick: onCustomize,\n            },\n          ]}\n          footer={{ buttons }}\n          header={{\n            description: ui.firstLayer.description.default,\n            enableHTMLTextFormatting: true,\n            functions: { onLanguageChange },\n            showLanguageSelector: ui.firstLayer.isLanguageSelectorEnabled,\n            title: ui.firstLayer.title,\n          }}\n          layerSettings={{\n            isOverlayEnabled: ui.firstLayer.isOverlayEnabled,\n            ...((isIE || isMobile) && { minVerticalScrollerHeight: 100 }),\n            ...layerConfig,\n            placeLinksInFooter: isBanner,\n            showBorderBottom: false,\n            withInitialHeight: true,\n          }}\n          useBackgroundColor\n        />\n      );\n    case VIEW.SECOND_LAYER:\n      return (\n        <MainLayout\n          footer={{ buttons, showBorderBeforeFooter: true }}\n          header={{\n            description: ui.secondLayer.description,\n            enableHTMLTextFormatting: true,\n            functions: { onClose, onLanguageChange },\n            showCloseButton: true,\n            showLanguageSelector: ui.secondLayer.isLanguageSelectorEnabled,\n            title: ui.secondLayer.title,\n          }}\n          layerSettings={{\n            isOverlayEnabled: ui.secondLayer.isOverlayEnabled,\n            ...(isIE && { minVerticalScrollerHeight: 350 }),\n            ...layerConfig,\n            minVerticalScrollerHeight: 320,\n            placeLinksInFooter: isBanner,\n            showBorderBottom: false,\n            side: ui.secondLayer.side,\n            withFadingBottom: true,\n            withInitialHeight: true,\n          }}\n          useBackgroundColor={false}\n        >\n          <Tabs>\n            <DefaultTabs />\n          </Tabs>\n        </MainLayout>\n      );\n    default:\n      return <Fragment />;\n  }\n};\n\nexport default memo(Ccpa);\n"],"names":["CcpaButton","disabled","onClick","settings","useSettingsContext","ui","theme","useTheme","h","Button","ariaLabel","ariaLabels","ccpaButton","backgroundColor","buttons","save","bg","fullWidth","label","testid","textColor","text","ToggleButton","styled","button","size","media","mobilePortrait","ToggleLabel","color","typography","weight","bold","medium","getCssBasedOnRtl","CSS_PROPERTY","MARGIN_LEFT","spacing","base","xs","MARGIN_RIGHT","sm","ToggleContainer","div","CcpaToggle","checked","focusOnMount","id","uuidv4","onToggle","toggleRef","useRef","useEffect","current","focus","preventScroll","role","tabIndex","ref","OnIcon","OffIcon","key","htmlFor","firstLayerVariant","view","useUiContext","Toggle","VIEW","FIRST_LAYER","FIRST_LAYER_VARIANT","BANNER","optOutNotice","testIds","firstLayerBanner","firstLayerWall","secondLayer","memo","onClose","onCustomize","onLanguageChange","setToggleCcpaChecked","toggleCcpaChecked","UC","secondLayerVariant","isIE","isMobile","useDeviceState","saveOptOutForCcpa","loading","saveOptOutForCcpaLoading","useMutation","closeView","setFirstLayerVariant","setSecondLayerVariant","focusToggleOnMount","setFocusToggleOnMount","useState","ccpaSettings","getCcpaOptOutStatus","firstLayer","variant","layerConfig","mapUIVariantToLayer","SECOND_LAYER","loadingMutation","saveUserActionPerformed","async","focusedToggle","document","activeElement","_document$activeEleme","shadowRoot","_document$activeEleme2","querySelector","error","isBanner","layerPlacement","LAYER_PLACEMENT","BOTTOM","TOP","MainLayout","customActions","ccpaMoreInformation","showSecondLayer","footer","header","description","default","enableHTMLTextFormatting","functions","showLanguageSelector","isLanguageSelectorEnabled","title","layerSettings","isOverlayEnabled","minVerticalScrollerHeight","placeLinksInFooter","showBorderBottom","withInitialHeight","useBackgroundColor","showBorderBeforeFooter","showCloseButton","side","withFadingBottom","Tabs","DefaultTabs","Fragment"],"mappings":"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"}